@page "/AddRecipe"

@using AppState
@using Application.Contracts;
@using RecipeApp.Shared;
@using System.Collections.ObjectModel

@inject AppState state
@inject NavigationManager NavigationManager

<div class="p-5">
	<button class="btn btn-primary" @onclick='_ => { NavigationManager.NavigateTo("/");}'>Back</button>
	<h1>Add Recipe</h1>
	<form>
		<div class="form-group py-2">
			<label for="title">Title</label>
			<input type="text" class="form-control" id="title" />
		</div>
		<div class="form-group py-2">
			<label for="description">Description</label>
			<input type="text" class="form-control" id="description" />
		</div>
		<div class="form-group py-2">
			<label for="image">Image</label>
			<input type="file" class="form-control" id="image" />
		</div>
		<div class="py-2">
			<div>Ingredients</div>
			@if (_ingredients.Count() > 0)
			{
				@foreach (var ingredient in _ingredients)
				{
					<p>@ingredient.Name @ingredient.Quantity @ingredient.Unit</p>
				}
			}
			<div class="form-group">
				<label for="ingredientName">Name</label>
				<input type="text" class="form-control" id="ingredientName" @bind="_ingredientName"/>
			</div>
			<div class="form-group">
				<label for="ingredientQuantity">Quantity</label>
				<input type="text" class="form-control" id="ingredientQuantity" @bind="_ingredientQuantity"/>
			</div>
			<div class="form-group">
				<label for="ingredientUnit">Unit</label>
				<input type="text" class="form-control" id="ingredientUnit" @bind="_ingredientUnit"/>
			</div>
			<button class="btn btn-primary" @onclick="_ => { AddIngredient(); }">Add Ingredient</button>
		</div>
		<div class="form-group py-2">
			<label for="instructions">Instructions</label>
			<button class="btn btn-primary">Add Instruction</button>
		</div>
		<div class="d-flex justify-content-end">
			<button type="submit" class="btn btn-primary">Submit Recipe</button>
		</div>
	</form>
</div>

@code {
	private ObservableCollection<IngredientDto> _ingredients = new();
	private ObservableCollection<InstructionDto> _instructions = new();

	private string _title;
	private string _description;
	private string _image;
	private string _ingredientName;
	private string _ingredientQuantity;
	private string _ingredientUnit;
	private string _instructionStep;
	private string _instructionDescription;


	private void AddIngredient()
	{
		try
		{
			// Add the ingredients observable collection
			_ingredients.Add(
				new IngredientDto
				{
					Name = _ingredientName,
					Quantity = Int32.Parse(_ingredientQuantity),
					Unit = _ingredientUnit
				}
			);

			// Clear the input fields
			_ingredientName = "";
			_ingredientQuantity = "";
			_ingredientUnit = "";
			//StateHasChanged();
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
		}
	}

	private void AddInstruction()
	{
		//_recipe.Instructions.Add(new InstructionDto());
	}

	private void SubmitRecipe()
	{
		// Call the service to submit the recipe
	}
}